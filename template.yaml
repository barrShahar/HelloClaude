AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Simple CRUD API for DynamoDB with Lambda functions

Parameters:
  Environment:
    Type: String
    Default: prod
    Description: Environment name for resource naming
  AnthropicApiKey:
    Type: String
    NoEcho: true
    Description: Anthropic API key for story generation

Globals:
  Function:
    Timeout: 30
    Runtime: python3.12
    Environment:
      Variables:
        TABLE_NAME: !Ref ItemsTable
        ANTHROPIC_API_KEY: !Ref AnthropicApiKey
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  # DynamoDB Table
  ItemsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "ItemsTable-${Environment}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Lambda Functions
  GetItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers.get_items.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ItemsTable
      Events:
        GetItems:
          Type: Api
          Properties:
            Path: /items
            Method: get

  GetItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers.get_item.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ItemsTable
      Events:
        GetItem:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: get

  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers.create_item.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemsTable
      Events:
        CreateItem:
          Type: Api
          Properties:
            Path: /items
            Method: post

  UpdateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers.update_item.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemsTable
      Events:
        UpdateItem:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: put

  DeleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers.delete_item.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemsTable
      Events:
        DeleteItem:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: delete

Outputs:
  ItemsApi:
    Description: "API Gateway endpoint URL for Items API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items"
  ItemsTable:
    Description: "DynamoDB table name"
    Value: !Ref ItemsTable